create procedure [dbo].[dbAddFellowshipCandidate]
(
@First_Name varchar(50) ,
@Middle_Name varchar(50),
@Last_Name varchar(50), 
@EmailId varchar(50) ,
@Hired_City varchar(50) ,
@Degree varchar(50) , 
@Hired_Date sys.Date,
@Mobile_Number int ,
@Permanent_Pincode int , 
@Hired_Lab int ,
@Attitude varchar(20) ,
@Communication_Remark varchar(20) , 
@Knowledge_Remark varchar(20) ,
@Aggregate_Remark varchar(20),
@Status varchar(20), 
@Creator_Stamp varchar(50),
@Creator_User varchar(50),
@Birth_Date date, 
@Is_Birth_Date_Verified bit ,
@Parent_Name varchar(50),
@Parent_Occupation varchar(50),
@Parents_Mobile_Number int,
@Parents_Annual_Salary FLOAT,
@Local_Address varchar(100),
@Permanent_Address varchar(100),
@Joinig Date , 
@Candidate_Status varchar(20),
@Personal_Information varchar(20),
@Bank_Information varchar(20),
@Educational_Information varchar(20),
@Document_Status varchar(20),
@Remark varchar(20)
)
as
BEGIN
    BEGIN TRY
insert into FellowshipCandidate(First_Name ,
Middle_Name,
Last_Name , 
EmailId  ,
Hired_City ,
Degree, 
Hired_Date,
Mobile_Number ,
Permanent_Pincode , 
Hired_Lab ,
Attitude,
Communication_Remark , 
Knowledge_Remark,
Aggregate_Remark,
Status, 
Creator_Stamp,
Creator_User,
Birth_Date , 
Is_Birth_Date_Verified,
Parent_Name,
Parent_Occupation,
Parents_Mobile_Number,
Parents_Annual_Salary ,
Local_Address,
Permanent_Address,
Joinig, 
Candidate_Status,
Personal_Information,
Bank_Information,
Educational_Information,
Document_Status,
Remark)
values(@First_Name ,
@Middle_Name,
@Last_Name , 
@EmailId  ,
@Hired_City ,
@Degree, 
@Hired_Date,
@Mobile_Number ,
@Permanent_Pincode , 
@Hired_Lab ,
@Attitude,
@Communication_Remark , 
@Knowledge_Remark,
@Aggregate_Remark,
@Status, 
@Creator_Stamp,
@Creator_User,
@Birth_Date , 
@Is_Birth_Date_Verified,
@Parent_Name,
@Parent_Occupation,
@Parents_Mobile_Number,
@Parents_Annual_Salary ,
@Local_Address,
@Permanent_Address,
@Joinig, 
@Candidate_Status,
@Personal_Information,
@Bank_Information,
@Educational_Information,
@Document_Status,
@Remark)
end try
  BEGIN CATCH  
   Print 'Error'  
END CATCH;  
end;